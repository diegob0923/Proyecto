//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto.Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CentroMedicoEntities : DbContext
    {
        public CentroMedicoEntities()
            : base("name=CentroMedicoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Canton> Canton { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Distrito> Distrito { get; set; }
        public DbSet<Doctores> Doctores { get; set; }
        public DbSet<Enfermedad> Enfermedad { get; set; }
        public DbSet<Enfermedad_Cliente> Enfermedad_Cliente { get; set; }
        public DbSet<Especialidad_Medica> Especialidad_Medica { get; set; }
        public DbSet<Provincia> Provincia { get; set; }
        public DbSet<Registro_citas> Registro_citas { get; set; }
        public DbSet<Tratamiento_Cliente> Tratamiento_Cliente { get; set; }
        public DbSet<Tratamiento_Quirurgico> Tratamiento_Quirurgico { get; set; }
        public DbSet<Usuarios_Sistema> Usuarios_Sistema { get; set; }

        internal void sp_ModificaRegistroCitas(int idDoctor, int idCliente, string fechaCita, string horaCita, int especialidad, string observaciones, string estadoCita)
        {
            throw new NotImplementedException();
        }

        public virtual ObjectResult<RetornaCantones_Result> RetornaCantones(string nombre, Nullable<int> id_Provincia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaCantones_Result>("RetornaCantones", nombreParameter, id_ProvinciaParameter);
        }
    
        public virtual ObjectResult<RetornaCantonesID_Result> RetornaCantonesID(Nullable<int> id_Canton)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaCantonesID_Result>("RetornaCantonesID", id_CantonParameter);
        }
    
        public virtual ObjectResult<RetornaProvincias_Result> RetornaProvincias(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaProvincias_Result>("RetornaProvincias", nombreParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_BorrarCliente(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarCliente", id_clienteParameter);
        }
    
        public virtual int sp_BorrarDoctores(Nullable<int> id_Doctor)
        {
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("id_Doctor", id_Doctor) :
                new ObjectParameter("id_Doctor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarDoctores", id_DoctorParameter);
        }
    
        public virtual int sp_BorrarRegistroCita(Nullable<int> id_único)
        {
            var id_únicoParameter = id_único.HasValue ?
                new ObjectParameter("id_único", id_único) :
                new ObjectParameter("id_único", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarRegistroCita", id_únicoParameter);
        }
    
        public virtual ObjectResult<sp_citas_paciente_asistio_Result> sp_citas_paciente_asistio(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_citas_paciente_asistio_Result>("sp_citas_paciente_asistio", cedulaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarDoctoresPorCedula_Result> sp_ConsultarDoctoresPorCedula(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarDoctoresPorCedula_Result>("sp_ConsultarDoctoresPorCedula", cedulaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarRegistroCitas_Result> sp_ConsultarRegistroCitas(Nullable<int> id_único)
        {
            var id_únicoParameter = id_único.HasValue ?
                new ObjectParameter("id_único", id_único) :
                new ObjectParameter("id_único", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarRegistroCitas_Result>("sp_ConsultarRegistroCitas", id_únicoParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EliminaCanton(Nullable<int> id_Canton)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaCanton", id_CantonParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsertaCanton(Nullable<int> id_Provincia, string nombre, Nullable<int> id_CantonInec)
        {
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonInecParameter = id_CantonInec.HasValue ?
                new ObjectParameter("id_CantonInec", id_CantonInec) :
                new ObjectParameter("id_CantonInec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaCanton", id_ProvinciaParameter, nombreParameter, id_CantonInecParameter);
        }
    
        public virtual int sp_InsertarCliente(Nullable<int> cedula, string genero, string fecha_nacimiento, string nombre, string primer_apellido, string segundo_apellido, string telefono1, string telefono2, string correo, Nullable<int> id_provincia, Nullable<int> id_canton, Nullable<int> id_distrito, string direccion)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento != null ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("telefono1", telefono1) :
                new ObjectParameter("telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("telefono2", telefono2) :
                new ObjectParameter("telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var id_provinciaParameter = id_provincia.HasValue ?
                new ObjectParameter("id_provincia", id_provincia) :
                new ObjectParameter("id_provincia", typeof(int));
    
            var id_cantonParameter = id_canton.HasValue ?
                new ObjectParameter("id_canton", id_canton) :
                new ObjectParameter("id_canton", typeof(int));
    
            var id_distritoParameter = id_distrito.HasValue ?
                new ObjectParameter("id_distrito", id_distrito) :
                new ObjectParameter("id_distrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarCliente", cedulaParameter, generoParameter, fecha_nacimientoParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, telefono1Parameter, telefono2Parameter, correoParameter, id_provinciaParameter, id_cantonParameter, id_distritoParameter, direccionParameter);
        }
    
        public virtual int sp_InsertarDoctores(Nullable<int> cedula, string genero, string fecha_nacimiento, string nombre, string primer_apellido, string segundo_apellido, string telefono_principal, string telefono_secundario, string correo_electronico, Nullable<int> carne_codigo_respectivo, Nullable<int> id_provincia, Nullable<int> id_canton, Nullable<int> id_distrito, string direccion, Nullable<int> especialidad_medica, string hora_almuerzo)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento != null ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var telefono_principalParameter = telefono_principal != null ?
                new ObjectParameter("telefono_principal", telefono_principal) :
                new ObjectParameter("telefono_principal", typeof(string));
    
            var telefono_secundarioParameter = telefono_secundario != null ?
                new ObjectParameter("telefono_secundario", telefono_secundario) :
                new ObjectParameter("telefono_secundario", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var carne_codigo_respectivoParameter = carne_codigo_respectivo.HasValue ?
                new ObjectParameter("carne_codigo_respectivo", carne_codigo_respectivo) :
                new ObjectParameter("carne_codigo_respectivo", typeof(int));
    
            var id_provinciaParameter = id_provincia.HasValue ?
                new ObjectParameter("id_provincia", id_provincia) :
                new ObjectParameter("id_provincia", typeof(int));
    
            var id_cantonParameter = id_canton.HasValue ?
                new ObjectParameter("id_canton", id_canton) :
                new ObjectParameter("id_canton", typeof(int));
    
            var id_distritoParameter = id_distrito.HasValue ?
                new ObjectParameter("id_distrito", id_distrito) :
                new ObjectParameter("id_distrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var especialidad_medicaParameter = especialidad_medica.HasValue ?
                new ObjectParameter("especialidad_medica", especialidad_medica) :
                new ObjectParameter("especialidad_medica", typeof(int));
    
            var hora_almuerzoParameter = hora_almuerzo != null ?
                new ObjectParameter("hora_almuerzo", hora_almuerzo) :
                new ObjectParameter("hora_almuerzo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarDoctores", cedulaParameter, generoParameter, fecha_nacimientoParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, telefono_principalParameter, telefono_secundarioParameter, correo_electronicoParameter, carne_codigo_respectivoParameter, id_provinciaParameter, id_cantonParameter, id_distritoParameter, direccionParameter, especialidad_medicaParameter, hora_almuerzoParameter);
        }
    
        public virtual int sp_InsertarEspecialidadMedica(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarEspecialidadMedica", nombreParameter, descripcionParameter);
        }
    
        public virtual int sp_InsertarRegistroCitas(Nullable<int> id_doctor, Nullable<int> id_cliente, string fecha_cita, string hora_cita, Nullable<int> especialista, string observaciones, string estado_cita)
        {
            var id_doctorParameter = id_doctor.HasValue ?
                new ObjectParameter("id_doctor", id_doctor) :
                new ObjectParameter("id_doctor", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var fecha_citaParameter = fecha_cita != null ?
                new ObjectParameter("fecha_cita", fecha_cita) :
                new ObjectParameter("fecha_cita", typeof(string));
    
            var hora_citaParameter = hora_cita != null ?
                new ObjectParameter("hora_cita", hora_cita) :
                new ObjectParameter("hora_cita", typeof(string));
    
            var especialistaParameter = especialista.HasValue ?
                new ObjectParameter("especialista", especialista) :
                new ObjectParameter("especialista", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var estado_citaParameter = estado_cita != null ?
                new ObjectParameter("estado_cita", estado_cita) :
                new ObjectParameter("estado_cita", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarRegistroCitas", id_doctorParameter, id_clienteParameter, fecha_citaParameter, hora_citaParameter, especialistaParameter, observacionesParameter, estado_citaParameter);
        }
    
        public virtual int sp_ModificaCanton(Nullable<int> id_Canton, Nullable<int> id_Provincia, string nombre, Nullable<int> id_CantonInec)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonInecParameter = id_CantonInec.HasValue ?
                new ObjectParameter("id_CantonInec", id_CantonInec) :
                new ObjectParameter("id_CantonInec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaCanton", id_CantonParameter, id_ProvinciaParameter, nombreParameter, id_CantonInecParameter);
        }
    
        public virtual int sp_ModificaDoctores(Nullable<int> id_Doctor, Nullable<int> cedula, string genero, string fecha_nacimiento, string nombre, string primer_apellido, string segundo_apellido, string telefono_principal, string telefono_secundario, string correo_electronico, Nullable<int> carne_codigo_respectivo, Nullable<int> id_provincia, Nullable<int> id_canton, Nullable<int> id_distrito, string direccion, Nullable<int> especialidad_medica, string hora_almuerzo)
        {
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("id_Doctor", id_Doctor) :
                new ObjectParameter("id_Doctor", typeof(int));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento != null ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var telefono_principalParameter = telefono_principal != null ?
                new ObjectParameter("telefono_principal", telefono_principal) :
                new ObjectParameter("telefono_principal", typeof(string));
    
            var telefono_secundarioParameter = telefono_secundario != null ?
                new ObjectParameter("telefono_secundario", telefono_secundario) :
                new ObjectParameter("telefono_secundario", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var carne_codigo_respectivoParameter = carne_codigo_respectivo.HasValue ?
                new ObjectParameter("carne_codigo_respectivo", carne_codigo_respectivo) :
                new ObjectParameter("carne_codigo_respectivo", typeof(int));
    
            var id_provinciaParameter = id_provincia.HasValue ?
                new ObjectParameter("id_provincia", id_provincia) :
                new ObjectParameter("id_provincia", typeof(int));
    
            var id_cantonParameter = id_canton.HasValue ?
                new ObjectParameter("id_canton", id_canton) :
                new ObjectParameter("id_canton", typeof(int));
    
            var id_distritoParameter = id_distrito.HasValue ?
                new ObjectParameter("id_distrito", id_distrito) :
                new ObjectParameter("id_distrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var especialidad_medicaParameter = especialidad_medica.HasValue ?
                new ObjectParameter("especialidad_medica", especialidad_medica) :
                new ObjectParameter("especialidad_medica", typeof(int));
    
            var hora_almuerzoParameter = hora_almuerzo != null ?
                new ObjectParameter("hora_almuerzo", hora_almuerzo) :
                new ObjectParameter("hora_almuerzo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaDoctores", id_DoctorParameter, cedulaParameter, generoParameter, fecha_nacimientoParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, telefono_principalParameter, telefono_secundarioParameter, correo_electronicoParameter, carne_codigo_respectivoParameter, id_provinciaParameter, id_cantonParameter, id_distritoParameter, direccionParameter, especialidad_medicaParameter, hora_almuerzoParameter);
        }
    
        public virtual int sp_ModificarCliente(Nullable<int> id_cliente, Nullable<int> cedula, string genero, string fecha_nacimiento, string nombre, string primer_apellido, string segundo_apellido, string telefono1, string telefono2, string correo, Nullable<int> id_provincia, Nullable<int> id_canton, Nullable<int> id_distrito, string direccion)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento != null ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("telefono1", telefono1) :
                new ObjectParameter("telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("telefono2", telefono2) :
                new ObjectParameter("telefono2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var id_provinciaParameter = id_provincia.HasValue ?
                new ObjectParameter("id_provincia", id_provincia) :
                new ObjectParameter("id_provincia", typeof(int));
    
            var id_cantonParameter = id_canton.HasValue ?
                new ObjectParameter("id_canton", id_canton) :
                new ObjectParameter("id_canton", typeof(int));
    
            var id_distritoParameter = id_distrito.HasValue ?
                new ObjectParameter("id_distrito", id_distrito) :
                new ObjectParameter("id_distrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarCliente", id_clienteParameter, cedulaParameter, generoParameter, fecha_nacimientoParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, telefono1Parameter, telefono2Parameter, correoParameter, id_provinciaParameter, id_cantonParameter, id_distritoParameter, direccionParameter);
        }
    
        public virtual int sp_ModificaRegistroCitas(Nullable<int> id_único, Nullable<int> id_doctor, Nullable<int> id_cliente, string fecha_cita, string hora_cita, Nullable<int> especialista, string observaciones, string estado_cita)
        {
            var id_únicoParameter = id_único.HasValue ?
                new ObjectParameter("id_único", id_único) :
                new ObjectParameter("id_único", typeof(int));
    
            var id_doctorParameter = id_doctor.HasValue ?
                new ObjectParameter("id_doctor", id_doctor) :
                new ObjectParameter("id_doctor", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var fecha_citaParameter = fecha_cita != null ?
                new ObjectParameter("fecha_cita", fecha_cita) :
                new ObjectParameter("fecha_cita", typeof(string));
    
            var hora_citaParameter = hora_cita != null ?
                new ObjectParameter("hora_cita", hora_cita) :
                new ObjectParameter("hora_cita", typeof(string));
    
            var especialistaParameter = especialista.HasValue ?
                new ObjectParameter("especialista", especialista) :
                new ObjectParameter("especialista", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var estado_citaParameter = estado_cita != null ?
                new ObjectParameter("estado_cita", estado_cita) :
                new ObjectParameter("estado_cita", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaRegistroCitas", id_únicoParameter, id_doctorParameter, id_clienteParameter, fecha_citaParameter, hora_citaParameter, especialistaParameter, observacionesParameter, estado_citaParameter);
        }
    
        public virtual ObjectResult<sp_padecimientos_paciente_Result> sp_padecimientos_paciente(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_padecimientos_paciente_Result>("sp_padecimientos_paciente", cedulaParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<RetornaDistritos_Result> RetornaDistritos(string nombre, Nullable<int> id_Canton)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaDistritos_Result>("RetornaDistritos", nombreParameter, id_CantonParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarEspecialidadPorNombre_Result> sp_ConsultarEspecialidadPorNombre(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarEspecialidadPorNombre_Result>("sp_ConsultarEspecialidadPorNombre", nombreParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarClientePorCedula_Result> sp_ConsultarClientePorCedula(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarClientePorCedula_Result>("sp_ConsultarClientePorCedula", cedulaParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarClienteId_Result> sp_ConsultarClienteId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarClienteId_Result>("sp_ConsultarClienteId", idParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarEspecialidadId_Result> sp_ConsultarEspecialidadId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarEspecialidadId_Result>("sp_ConsultarEspecialidadId", idParameter);
        }
    
        public virtual int sp_BorrarEspecialidadMedica(Nullable<int> id_especialidad)
        {
            var id_especialidadParameter = id_especialidad.HasValue ?
                new ObjectParameter("id_especialidad", id_especialidad) :
                new ObjectParameter("id_especialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarEspecialidadMedica", id_especialidadParameter);
        }
    
        public virtual int sp_ModificarEspecialidadMedica(Nullable<int> id_especialidad, string nombre, string descripcion)
        {
            var id_especialidadParameter = id_especialidad.HasValue ?
                new ObjectParameter("id_especialidad", id_especialidad) :
                new ObjectParameter("id_especialidad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarEspecialidadMedica", id_especialidadParameter, nombreParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<sp_RetornaUsuarioValido_Result> sp_RetornaUsuarioValido(string id_Usuario, string contrasena)
        {
            var id_UsuarioParameter = id_Usuario != null ?
                new ObjectParameter("Id_Usuario", id_Usuario) :
                new ObjectParameter("Id_Usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaUsuarioValido_Result>("sp_RetornaUsuarioValido", id_UsuarioParameter, contrasenaParameter);
        }
    
        public virtual int sp_BorrarEnfermedades(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarEnfermedades", idParameter);
        }
    
        public virtual int sp_BorrarTratamientosQuirurgicos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarTratamientosQuirurgicos", idParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarEnfermedades_Result> sp_ConsultarEnfermedades(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarEnfermedades_Result>("sp_ConsultarEnfermedades", nombreParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarEnfermedadesID_Result> sp_ConsultarEnfermedadesID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarEnfermedadesID_Result>("sp_ConsultarEnfermedadesID", idParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarTratamientosQuirurgicos_Result> sp_ConsultarTratamientosQuirurgicos(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarTratamientosQuirurgicos_Result>("sp_ConsultarTratamientosQuirurgicos", nombreParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<sp_ConsultarTratamientosQuirurgicosID_Result> sp_ConsultarTratamientosQuirurgicosID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultarTratamientosQuirurgicosID_Result>("sp_ConsultarTratamientosQuirurgicosID", idParameter);
        }
    
        public virtual int sp_InsertarEnfermedad(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarEnfermedad", nombreParameter, descripcionParameter);
        }
    
        public virtual int sp_InsertarTratamientoQuirurgico(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarTratamientoQuirurgico", nombreParameter, descripcionParameter);
        }
    
        public virtual int sp_ModificarEnfermedad(Nullable<int> id, string nombre, string descripcion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarEnfermedad", idParameter, nombreParameter, descripcionParameter);
        }
    
        public virtual int sp_ModificarTratamientoQuirurgico(Nullable<int> id, string nombre, string descripcion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificarTratamientoQuirurgico", idParameter, nombreParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<GenerarReporteExpediente_Result> GenerarReporteExpediente(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerarReporteExpediente_Result>("GenerarReporteExpediente", cedulaParameter);
        }
    }
}
